.backend-base:
    before_script:
        - chmod +x backend/mvnw

build-backend:
    extends: .backend-base
    stage: build
    script:
        - backend/mvnw clean package -B -Dmaven.repo.local=.m2/repository -f backend/pom.xml -DskipTests
    artifacts:
        paths:
            - backend/target/*.jar     
        expire_in: 1 day
    
unit-test-backend:
    extends: .backend-base
    needs: 
        - build-backend
    dependencies: 
        - build-backend
    stage: test
    script: 
        - backend/mvnw test -Dmaven.repo.local=.m2/repository -f backend/pom.xml
    artifacts:
        reports:
            junit: backend/target/surefire-reports/TEST-*.xml
            coverage_report:
                coverage_format: jacoco
                path: backend/target/site/jacoco/jacoco.xml
        paths:
            - backend/target/site/jacoco/
        expire_in: 30 days

integration-test-backend:
    extends: .backend-base
    needs: 
        - build-backend
    dependencies: 
        - build-backend
    stage: test
    script: 
        - backend/mvnw verify -Dmaven.repo.local=.m2/repository -f backend/pom.xml -P integration-tests
    artifacts:
        reports:
            junit: backend/target/failsafe-reports/TEST-*.xml
        expire_in: 30 days

deployment-test-backend:
    extends: .backend-base
    needs: 
        - build-backend
        - deploy-backend
    dependencies: 
        - build-backend
    stage: e2e-test
    script: 
        - backend/mvnw verify -Dmaven.repo.local=.m2/repository -f backend/pom.xml -P deployment-tests
    artifacts:
        reports:
            junit: backend/target/failsafe-reports/TEST-*.xml
        expire_in: 30 days

deploy-backend:
    image: ahallemberg/itp:deploy-backend
    extends: 
        - .deployment-rules
    dependencies:
        - build-backend
    needs: 
        - build-backend
        - unit-test-backend
        - integration-test-backend
    stage: deploy
    script:
        # Login to Google Cloud 
        - echo $GCP_SERVICE_KEY | base64 -d > /tmp/gcloud-service-key.json
        - gcloud auth activate-service-account --key-file=/tmp/gcloud-service-key.json
        - gcloud config set project $PROJECT_ID
        # Store current version ID before deployment
        - CURRENT_VERSION=$(gcloud app versions list --sort-by=~version.createTime --limit=1 --format="value(version.id)")
        - echo "CURRENT_VERSION=$CURRENT_VERSION" >> deploy.env
        # Replace the application properties 
        # - apt-get update -qq && apt-get install -qq -y python3 > /dev/null 2>&1
        - python3 backend/scripts/replace.py backend/src/main/resources/application.properties > /dev/null 2>&1 || exit 1
        # Compile and package project
        - chmod +x backend/mvnw
        - backend/mvnw clean package -B -DskipTests -Dmaven.repo.local=.m2/repository -f backend/pom.xml
        # Deploy to gcloud
        - gcloud app deploy -q backend/target/diglib-0.0.1-SNAPSHOT.jar
    artifacts:
        reports:
            dotenv: deploy.env

deployment-test-backend:
    extends: 
        - .backend-base
        - .deployment-rules
    needs:
        - build-backend
        - deploy-backend
    dependencies:
        - build-backend
        - deploy-backend
    stage: e2e-test
    script:
        - backend/mvnw verify -Dmaven.repo.local=.m2/repository -f backend/pom.xml -P deployment-tests
    artifacts:
        reports:
            junit: backend/target/failsafe-reports/TEST-*.xml
        expire_in: 30 days
    # This does a roleback if backend doesnt work
    after_script:
        - |
            if [ $CI_JOB_STATUS = "failed" ]; then
                echo "Deployment tests failed. Rolling back to previous version..."
                echo $GCP_SERVICE_KEY | base64 -d > /tmp/gcloud-service-key.json
                gcloud auth activate-service-account --key-file=/tmp/gcloud-service-key.json
                gcloud config set project $PROJECT_ID
                gcloud app services set-traffic default --splits=$CURRENT_VERSION=1
            fi