<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.itp</groupId>
    <artifactId>DigLib-ui-parent</artifactId>
    <version>1.0</version>
    <modules>
        <module>model</module>
        <module>fxui</module>
        <module>aggregate</module>
    </modules>
    <packaging>pom</packaging>

    <properties>

        <!-- Existing properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <skip.unit.tests>false</skip.unit.tests>
        
        <!-- Version properties -->
        <javafx.version>17.0.8</javafx.version>
        <junit.version>5.10.0</junit.version>
        <testfx.version>4.0.16-alpha</testfx.version>
        <jacoco.version>0.8.8</jacoco.version>
        <mockito.version>4.5.1</mockito.version>
        <spotbugs.version>4.8.6</spotbugs.version>
        <junit.version>5.8.2</junit.version>
        <hamcrest.verson>2.2</hamcrest.verson>
        <monocle.version>17.0.10</monocle.version>
        
        <!-- Plugin versions -->
        <compiler.plugin.version>3.8.1</compiler.plugin.version>
        <surefire.plugin.version>3.1.2</surefire.plugin.version>
        <failsafe.plugin.version>3.1.2</failsafe.plugin.version>
        <javafx.plugin.version>0.0.8</javafx.plugin.version>
        <spotbugs.plugin.version>4.8.6.4</spotbugs.plugin.version>
        <checkstyle.plugin.version>3.2.1</checkstyle.plugin.version>
        <spotbugs.plugin.version>4.8.6.4</spotbugs.plugin.version>
        <jar.plugin.version>3.3.0</jar.plugin.version>
        <jlink.plugin.version>1.0.0.RC2</jlink.plugin.version>
        <jpackage.plugin.version>1.6.0</jpackage.plugin.version>
        
        <!-- JavaFX configuration -->
        <javafx.modules>javafx.controls,javafx.fxml,javafx.graphics,javafx.base</javafx.modules>
        
        <!-- Test configuration -->
        <test.argLine>
            --add-modules ${javafx.modules}
            --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
            --add-exports javafx.base/com.sun.javafx.logging=ALL-UNNAMED
            --add-opens javafx.graphics/javafx.stage=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
        </test.argLine>

        <integration-test.argLine>
            --add-exports javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens fxui/fxui=ALL-UNNAMED
            --add-opens javafx.graphics/javafx.stage=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
            --add-exports javafx.base/com.sun.javafx.logging=ALL-UNNAMED
        </integration-test.argLine>
        
        <!-- JaCoCo configuration -->
        <jacoco.integration.agent.argLine>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco-it.exec</jacoco.integration.agent.argLine>
        <jacoco.agent.argLine>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco.exec</jacoco.agent.argLine>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!--Spot bugs-->
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotsbugs.version}</version>
            </dependency>
            <!-- JUnit -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Hamcrest Dependency -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                 <!-- SpotBugs plugin -->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin.version}</version>
                    <configuration>
                        <excludeFilterFile>spotbugs-filter.xml</excludeFilterFile>
                    </configuration>
                </plugin>
                <!-- Compiler plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler.plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <!-- Surefire plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.plugin.version}</version>
                    <configuration>
                        <skipTests>${skip.unit.tests}</skipTests>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <argLine>${argLine}</argLine>
                    </configuration>
                </plugin>
                <!--JavaFx pluging-->
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>${javafx.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Checkstyle plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>../../checkstyle.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                     <excludes>**/module-info.java</excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <!-- Prepare agent for all child modules -->
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <phase>initialize</phase>                    
                        </execution>
                    <!-- Generate report for all child modules -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- SpotBugs plugin -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.plugin.version}</version>
                <configuration>
                    <excludeFilterFile>${project.basedir}/../../../spotbugs.xml</excludeFilterFile>
                </configuration>
                <dependencies>

                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                    <dependency>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs</artifactId>
                    <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>